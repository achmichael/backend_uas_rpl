{
    "openapi": "3.0.0",
    "info": {
        "title": "Talent Bridge API",
        "description": "Talent Bridge API Khusus untuk internal developer Talent Bridge API",
        "version": "1.0.0"
    },
    "paths": {
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Login",
                "operationId": "2b0c7f9d36d3c5b190b8760b8ae3633e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Redirect to /dashboard with auth_token cookie"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "User Registration",
                "operationId": "afcc4c71c73eaf15048c904cac09d806",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "john_doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Redirect to /dashboard with auth_token cookie"
                    }
                }
            }
        },
        "/api/catalogs": {
            "post": {
                "tags": [
                    "Catalogs"
                ],
                "summary": "Create a new catalog item",
                "operationId": "93494050764076d0467ea0c27690027d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "catalog_name",
                                    "price",
                                    "description"
                                ],
                                "properties": {
                                    "catalog_name": {
                                        "type": "string",
                                        "example": "Web Development Services"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500000
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Professional web development services with modern technologies"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Catalog created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Catalog"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "invalid create catalog"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/catalogs/{id}": {
            "put": {
                "tags": [
                    "Catalogs"
                ],
                "summary": "Update a catalog item",
                "operationId": "5c40862116e524aa4644014666f869ff",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Catalog ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "catalog_name",
                                    "price",
                                    "description"
                                ],
                                "properties": {
                                    "catalog_name": {
                                        "type": "string",
                                        "example": "Updated Web Development Services"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 600000
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated professional web development services with modern technologies"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Catalog updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "succes update"
                                        },
                                        "data": {
                                            "type": "integer",
                                            "example": 1
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Catalog not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "catalog not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Catalogs"
                ],
                "summary": "Delete a catalog item",
                "operationId": "7336d8617f47cba8040c2669b0a43d41",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Catalog ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Catalog deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Catalog deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Catalog not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "catalog not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/certificates": {
            "post": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Create a new certificate",
                "operationId": "a00c8fcda1fd26ec6c1e4aff4cbe3395",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "certificate_name",
                                    "expiration_date",
                                    "category",
                                    "status",
                                    "file_path",
                                    "description"
                                ],
                                "properties": {
                                    "certificate_name": {
                                        "type": "string",
                                        "example": "AWS Certified Developer"
                                    },
                                    "expiration_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-31"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Cloud Computing"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "file_path": {
                                        "type": "string",
                                        "example": "certificates/aws-dev-cert.pdf"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Certification for AWS developer associate level"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Certificate created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Certificate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "invalid add certificate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/certificates/{id}": {
            "put": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Update a certificate",
                "operationId": "5eaff6015aa0dcc0fa43913eac436ac8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Certificate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "certificate_name",
                                    "expiration_date",
                                    "category",
                                    "status",
                                    "file_path",
                                    "description"
                                ],
                                "properties": {
                                    "certificate_name": {
                                        "type": "string",
                                        "example": "Updated AWS Certified Developer"
                                    },
                                    "expiration_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2026-12-31"
                                    },
                                    "category": {
                                        "type": "string",
                                        "example": "Cloud Computing"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "active"
                                    },
                                    "file_path": {
                                        "type": "string",
                                        "example": "certificates/updated-aws-dev-cert.pdf"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated certification for AWS developer associate level"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Certificate updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "ststus": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Certificate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "invalid add certificate"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Certificates"
                ],
                "summary": "Delete a certificate",
                "operationId": "b3ee9a288a3aa567a708f702492896fe",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Certificate ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Certificate deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "delete succesfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Certificate not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string",
                                            "example": "certificate is nothing"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/companies": {
            "get": {
                "tags": [
                    "Companies"
                ],
                "summary": "Get list of companies",
                "operationId": "80eb39cf3f8d7b480171fea2f33d6060",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query for company name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of companies",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Company"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Companies"
                ],
                "summary": "Create a new company",
                "operationId": "6f8e0dcb89b24ff801d0067817c1d77a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "addres",
                                    "phone",
                                    "email",
                                    "website",
                                    "founded"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Acme Corporation"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "company_image.jpg"
                                    },
                                    "addres": {
                                        "type": "string",
                                        "example": "123 Main Street"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "123456789"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "info@acme.com"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://acme.com"
                                    },
                                    "founded": {
                                        "type": "integer",
                                        "example": 2000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Company"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/companies/{id}": {
            "put": {
                "tags": [
                    "Companies"
                ],
                "summary": "Update a company",
                "operationId": "c125e6ebfb9c7669666225b619092333",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "addres",
                                    "phone",
                                    "email",
                                    "website",
                                    "founded"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Acme Corporation Updated"
                                    },
                                    "image": {
                                        "type": "string",
                                        "example": "company_image_updated.jpg"
                                    },
                                    "addres": {
                                        "type": "string",
                                        "example": "456 New Street"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "987654321"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "new@acme.com"
                                    },
                                    "website": {
                                        "type": "string",
                                        "example": "https://acme-updated.com"
                                    },
                                    "founded": {
                                        "type": "integer",
                                        "example": 2001
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Company updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Company"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string",
                                            "example": "company apa sih yang lagi di cari"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Companies"
                ],
                "summary": "Delete a company",
                "operationId": "92d84763842205e867d5bc5867b5f812",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Company ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Company deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Company"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Company not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string",
                                            "example": "company is nothing"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/contracts": {
            "post": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Create a new contract",
                "operationId": "3b593cdeb1d7e02190328c16d68027f6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "post_id",
                                    "client_id",
                                    "provider_id",
                                    "contract_date"
                                ],
                                "properties": {
                                    "post_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "client_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "provider_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "contract_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2023-06-15"
                                    },
                                    "status": {
                                        "type": "string",
                                        "enum": [
                                            "active",
                                            "completed",
                                            "terminated"
                                        ],
                                        "example": "active"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Contract created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Contract"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/contracts/{id}": {
            "get": {
                "tags": [
                    "Contracts"
                ],
                "summary": "Get contract details",
                "operationId": "fab8961798ece4e150cd892e94c895c7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contract ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contract details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Contract"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contract not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Contract not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/freelancers": {
            "get": {
                "tags": [
                    "Freelancers"
                ],
                "summary": "Get list of all freelancers",
                "operationId": "a4f92597f31a09f649a1e2b35e15e596",
                "responses": {
                    "200": {
                        "description": "List of freelancers retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data freelancer berhasil diambil"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Freelancer"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Freelancers"
                ],
                "summary": "Create a new freelancer",
                "operationId": "71d6ac63dd14cfc3d8bece2743f25013",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "category_id",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Experienced web developer with 5 years of experience"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 500000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Freelancer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data freelancer berhasil disimpan"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Freelancer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/freelancers/{id}": {
            "get": {
                "tags": [
                    "Freelancers"
                ],
                "summary": "Get freelancer details",
                "operationId": "bb8e64b6100b4199cd5c823956973f47",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Freelancer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Freelancer details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data freelancer berhasil diambil"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Freelancer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Freelancer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data freelancer tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Freelancers"
                ],
                "summary": "Update a freelancer",
                "operationId": "3c280b97de60d2d6bb5f35778afc0fd3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Freelancer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "category_id",
                                    "description",
                                    "price"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description with additional skills"
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 600000
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Freelancer updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data freelancer berhasil diubah"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Freelancer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Freelancer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data freelancer tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal Server Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Freelancers"
                ],
                "summary": "Delete a freelancer",
                "operationId": "2222d42cc39f44f604b05e09ab992b5e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Freelancer ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Freelancer deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data freelancer berhasil dihapus"
                                        },
                                        "data": {
                                            "type": "null"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Freelancer not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Data freelancer tidak ditemukan"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs": {
            "get": {
                "tags": [
                    "Job"
                ],
                "summary": "Get list of jobs",
                "operationId": "2a1f2306c8b5239d199c9a5bf97c9ced",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query for job title or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of jobs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Job"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Job"
                ],
                "summary": "Create a new job",
                "operationId": "08a4e2ab29ca916a6bb7d999d11d16a5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "min_experience_year",
                                    "number_of_employee",
                                    "duration",
                                    "status",
                                    "type_job",
                                    "type_salary",
                                    "system"
                                ],
                                "properties": {
                                    "min_experience_year": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "number_of_employee": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "duration": {
                                        "type": "string",
                                        "example": "6 months"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "open"
                                    },
                                    "type_job": {
                                        "type": "string",
                                        "example": "full-time"
                                    },
                                    "type_salary": {
                                        "type": "string",
                                        "example": "monthly"
                                    },
                                    "system": {
                                        "type": "string",
                                        "example": "remote"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Job created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Job"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/jobs/{id}": {
            "get": {
                "tags": [
                    "Job"
                ],
                "summary": "Get job details",
                "operationId": "8e49157694025e1aa63a4cb529c41cad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Job"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "massage": {
                                            "type": "string",
                                            "example": "job apa sih yang kamu cari"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Job"
                ],
                "summary": "Update a job",
                "operationId": "7317872995b9bc5a2c06a3e7aef93ecd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "min_experience_year",
                                    "number_of_employee",
                                    "duration",
                                    "status",
                                    "type_job",
                                    "type_salary",
                                    "system"
                                ],
                                "properties": {
                                    "min_experience_year": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "number_of_employee": {
                                        "type": "integer",
                                        "example": 7
                                    },
                                    "duration": {
                                        "type": "string",
                                        "example": "12 months"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "closed"
                                    },
                                    "type_job": {
                                        "type": "string",
                                        "example": "part-time"
                                    },
                                    "type_salary": {
                                        "type": "string",
                                        "example": "hourly"
                                    },
                                    "system": {
                                        "type": "string",
                                        "example": "on-site"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Job updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Job"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string",
                                            "example": "Job not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Job"
                ],
                "summary": "Delete a job",
                "operationId": "6ffd6ae6a4d42ac3e97b16b55af6b7a1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Job ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Job deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "massage": {
                                            "type": "string",
                                            "example": "deleted succesfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Job not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string",
                                            "example": "Job not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/locations": {
            "post": {
                "tags": [
                    "Locations"
                ],
                "summary": "Create a new location record",
                "operationId": "f2ea068ae4089c6256066ae10c530046",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "accuracy",
                                    "latitude",
                                    "longitude",
                                    "altitude",
                                    "heading",
                                    "speed",
                                    "altitudeAccuracy"
                                ],
                                "properties": {
                                    "accuracy": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 10.5
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -6.2088
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 106.8456
                                    },
                                    "altitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 20.5
                                    },
                                    "heading": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 90
                                    },
                                    "speed": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 5
                                    },
                                    "altitudeAccuracy": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1.5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Location"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/locations/{id}": {
            "put": {
                "tags": [
                    "Locations"
                ],
                "summary": "Update a location record",
                "operationId": "c7a68efce242030689b564f3c949b522",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "accuracy",
                                    "latitude",
                                    "longitude",
                                    "altitude",
                                    "heading",
                                    "speed",
                                    "altitudeAccuracy"
                                ],
                                "properties": {
                                    "accuracy": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 12.5
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -6.209
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 106.846
                                    },
                                    "altitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 22.5
                                    },
                                    "heading": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 95
                                    },
                                    "speed": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 6
                                    },
                                    "altitudeAccuracy": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Location updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Location"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Location not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Locations"
                ],
                "summary": "Delete a location record",
                "operationId": "73efc6a46294cf26463a1226dc81d0e5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Location ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Location deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Location not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "location with that id is empty"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/portfolios": {
            "post": {
                "tags": [
                    "Portfolios"
                ],
                "summary": "Create a new portfolio item",
                "operationId": "cb736ff0db7ee76c5cd96a8022dce143",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "title",
                                    "url"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "E-commerce Website"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://example.com/portfolio/ecommerce"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Portfolio created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Portfolio"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "invalid check the required again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/portfolios/{id}": {
            "put": {
                "tags": [
                    "Portfolios"
                ],
                "summary": "Update a portfolio item",
                "operationId": "3ff72ef5f533833f58d5d4be604cc5c4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Portfolio ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "title",
                                    "url"
                                ],
                                "properties": {
                                    "user_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Updated E-commerce Website"
                                    },
                                    "url": {
                                        "type": "string",
                                        "example": "https://example.com/portfolio/updated-ecommerce"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Portfolio updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "succes"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Portfolio"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "invalid check the required again"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string"
                                        },
                                        "error": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Portfolios"
                ],
                "summary": "Delete a portfolio item",
                "operationId": "370eae68c5e85978fc51810cab063701",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Portfolio ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Portfolio deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Portofolio deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Portfolio not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "massage": {
                                            "type": "string",
                                            "example": "error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get list of posts",
                "operationId": "4186b281454d4cf4c67a3254c731218a",
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "description": "Search query for post title or description",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Post"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "c525736cca34af3402c290c5a680dbde",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "price",
                                    "number_of_employee",
                                    "posted_by",
                                    "category_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Web Developer Needed"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Looking for an experienced web developer..."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1000
                                    },
                                    "number_of_employee": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "posted_by": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get post details",
                "operationId": "e0f9a2214074a618841855b152721330",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found bro"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update a post",
                "operationId": "0dec9d9e95078da66ec7717d5b63e8f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "description",
                                    "price",
                                    "number_of_employee",
                                    "posted_by"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Web Developer Job"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated job description..."
                                    },
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 1500
                                    },
                                    "number_of_employee": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "posted_by": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Post"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "operationId": "11cb021c9991dd024d16206da5df0ecd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Post deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/posts/{id}/recommend-freelancer": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get recommended freelancers for a post",
                "operationId": "706c2a60ce9a7dc5a1e737e13bd884a8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of recommended freelancers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "john@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user details with related data",
                "operationId": "40a5104e23b52137e78c3d3ac48b88a8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "user is invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user information",
                "operationId": "b166772cec9714067040e77cf14beeba",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe Updated"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.updated@example.com"
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user-profiles": {
            "post": {
                "tags": [
                    "User Profiles"
                ],
                "summary": "Create a new user profile",
                "operationId": "b170bd26e683ac0d530af70d4b545f71",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "full_name",
                                    "portofolio_url",
                                    "bio"
                                ],
                                "properties": {
                                    "full_name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "portofolio_url": {
                                        "type": "string",
                                        "example": "https://johndoe.portfolio.com"
                                    },
                                    "bio": {
                                        "type": "string",
                                        "example": "Experienced software developer with 5 years of experience"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User profile created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/UserProfile"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "succes": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "input invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Catalog": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "catalog_name": {
                        "type": "string",
                        "example": "Web Development Services"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 500000
                    },
                    "description": {
                        "type": "string",
                        "example": "Professional web development services with modern technologies"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Certificate": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "certificate_name": {
                        "type": "string",
                        "example": "AWS Certified Developer"
                    },
                    "expiration_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-12-31"
                    },
                    "category": {
                        "type": "string",
                        "example": "Cloud Computing"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "file_path": {
                        "type": "string",
                        "example": "certificates/aws-dev-cert.pdf"
                    },
                    "description": {
                        "type": "string",
                        "example": "Certification for AWS developer associate level"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Company": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Acme Corporation"
                    },
                    "image": {
                        "type": "string",
                        "example": "company_image.jpg"
                    },
                    "addres": {
                        "type": "string",
                        "example": "123 Main Street"
                    },
                    "phone": {
                        "type": "string",
                        "example": "123456789"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "info@acme.com"
                    },
                    "website": {
                        "type": "string",
                        "example": "https://acme.com"
                    },
                    "founded": {
                        "type": "integer",
                        "example": 2000
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "Contract": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "post_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "client_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "provider_id": {
                        "type": "integer",
                        "example": 3
                    },
                    "contract_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2023-06-15"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "completed",
                            "terminated"
                        ],
                        "example": "active"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "post": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "title": {
                                "type": "string",
                                "example": "Web Development Project"
                            },
                            "description": {
                                "type": "string",
                                "example": "Create a responsive website"
                            }
                        },
                        "type": "object"
                    },
                    "client": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 2
                            },
                            "name": {
                                "type": "string",
                                "example": "John Client"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "client@example.com"
                            }
                        },
                        "type": "object"
                    },
                    "provider": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 3
                            },
                            "name": {
                                "type": "string",
                                "example": "Jane Provider"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "provider@example.com"
                            }
                        },
                        "type": "object"
                    },
                    "milestones": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "contract_id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "title": {
                                    "type": "string",
                                    "example": "Design Phase"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Complete the design mockups"
                                },
                                "due_date": {
                                    "type": "string",
                                    "format": "date",
                                    "example": "2023-07-01"
                                },
                                "status": {
                                    "type": "string",
                                    "example": "completed"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "Freelancer": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "description": {
                        "type": "string",
                        "example": "Experienced web developer with 5 years of experience"
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 500000
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "John Doe"
                            },
                            "email": {
                                "type": "string",
                                "format": "email",
                                "example": "john@example.com"
                            }
                        },
                        "type": "object"
                    },
                    "category": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Web Development"
                            },
                            "description": {
                                "type": "string",
                                "example": "Services related to web development"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Job": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "min_experience_year": {
                        "type": "integer",
                        "example": 2
                    },
                    "number_of_employee": {
                        "type": "integer",
                        "example": 5
                    },
                    "duration": {
                        "type": "string",
                        "example": "6 months"
                    },
                    "status": {
                        "type": "string",
                        "example": "open"
                    },
                    "type_job": {
                        "type": "string",
                        "example": "full-time"
                    },
                    "type_salary": {
                        "type": "string",
                        "example": "monthly"
                    },
                    "system": {
                        "type": "string",
                        "example": "remote"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Location": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "accuracy": {
                        "type": "number",
                        "format": "float",
                        "example": 10.5
                    },
                    "latitude": {
                        "type": "number",
                        "format": "float",
                        "example": -6.2088
                    },
                    "longitude": {
                        "type": "number",
                        "format": "float",
                        "example": 106.8456
                    },
                    "altitude": {
                        "type": "number",
                        "format": "float",
                        "example": 20.5
                    },
                    "heading": {
                        "type": "number",
                        "format": "float",
                        "example": 90
                    },
                    "speed": {
                        "type": "number",
                        "format": "float",
                        "example": 5
                    },
                    "altitudeAccuracy": {
                        "type": "number",
                        "format": "float",
                        "example": 1.5
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Portfolio": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "E-commerce Website"
                    },
                    "url": {
                        "type": "string",
                        "example": "https://example.com/portfolio/ecommerce"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Post": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "title": {
                        "type": "string",
                        "example": "Web Developer Needed"
                    },
                    "description": {
                        "type": "string",
                        "example": "Looking for an experienced web developer..."
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 1000
                    },
                    "number_of_employee": {
                        "type": "integer",
                        "example": 2
                    },
                    "posted_by": {
                        "type": "uuid",
                        "example": 1
                    },
                    "category_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "user_profile": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "user_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "bio": {
                                "type": "string",
                                "example": "Experienced software developer"
                            },
                            "avatar": {
                                "type": "string",
                                "example": "avatar.jpg"
                            }
                        },
                        "type": "object",
                        "nullable": true
                    },
                    "location": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Location"
                        }
                    },
                    "portofolio": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "title": {
                                    "type": "string",
                                    "example": "Web Application"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "A full-stack web application"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "catalog": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "name": {
                                    "type": "string",
                                    "example": "Web Development Services"
                                },
                                "description": {
                                    "type": "string",
                                    "example": "Professional web development services"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "certificates": {
                        "type": "array",
                        "items": {
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "example": 1
                                },
                                "certificate_name": {
                                    "type": "string",
                                    "example": "AWS Certified Developer"
                                },
                                "description": {
                                    "type": "text",
                                    "example": "Amazon Web Services"
                                }
                            },
                            "type": "object"
                        }
                    }
                },
                "type": "object"
            },
            "UserProfile": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "full_name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "portofolio_url": {
                        "type": "string",
                        "example": "https://johndoe.portfolio.com"
                    },
                    "bio": {
                        "type": "string",
                        "example": "Experienced software developer with 5 years of experience"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Catalogs",
            "description": "Data terkait katalog produk atau layanan pengguna"
        },
        {
            "name": "Certificates",
            "description": "Data terkait sertifikat pengguna"
        },
        {
            "name": "Companies",
            "description": "Data terkait company"
        },
        {
            "name": "Contracts",
            "description": "Data terkait kontrak antara client dan provider"
        },
        {
            "name": "Freelancers",
            "description": "Data terkait freelancer"
        },
        {
            "name": "Job",
            "description": "Data terkait Pekerjaan"
        },
        {
            "name": "Locations",
            "description": "Data terkait lokasi pengguna"
        },
        {
            "name": "Portfolios",
            "description": "Data terkait portofolio pengguna"
        },
        {
            "name": "Posts",
            "description": "Data terkait postingan"
        },
        {
            "name": "Users",
            "description": "Data terkait pengguna"
        },
        {
            "name": "User Profiles",
            "description": "Data terkait profil pengguna"
        }
    ]
}